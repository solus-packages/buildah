From 5918f5f7c2885f09852f22df3de5a2b36fed4074 Mon Sep 17 00:00:00 2001
From: Daniel J Walsh <dwalsh@redhat.com>
Date: Mon, 19 Apr 2021 15:50:46 -0400
Subject: [PATCH] Do not force hard code to crun in rootless mode

runc now works with cgroupsV2 so buildah should not hard code crun.

Fixes: https://github.com/containers/buildah/issues/3160

[NO TESTS NEEDED] This would be very difficult and complicated to test.

Signed-off-by: Daniel J Walsh <dwalsh@redhat.com>
---
 cmd/buildah/run.go | 3 ++-
 util/util.go       | 5 -----
 2 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/cmd/buildah/run.go b/cmd/buildah/run.go
index a258599d..eb258f6d 100644
--- a/cmd/buildah/run.go
+++ b/cmd/buildah/run.go
@@ -7,6 +7,7 @@ import (
 	"github.com/containers/buildah"
 	buildahcli "github.com/containers/buildah/pkg/cli"
 	"github.com/containers/buildah/pkg/parse"
+	"github.com/containers/buildah/util"
 	"github.com/pkg/errors"
 	"github.com/sirupsen/logrus"
 	"github.com/spf13/cobra"
@@ -58,7 +59,7 @@ func init() {
 	flags.StringVar(&opts.hostname, "hostname", "", "set the hostname inside of the container")
 	flags.StringVar(&opts.isolation, "isolation", "", "`type` of process isolation to use. Use BUILDAH_ISOLATION environment variable to override.")
 	// Do not set a default runtime here, we'll do that later in the processing.
-	flags.StringVar(&opts.runtime, "runtime", "", "`path` to an alternate OCI runtime")
+	flags.StringVar(&opts.runtime, "runtime", util.Runtime(), "`path` to an alternate OCI runtime")
 	flags.StringSliceVar(&opts.runtimeFlag, "runtime-flag", []string{}, "add global flags for the container runtime")
 	flags.BoolVar(&opts.noPivot, "no-pivot", false, "do not use pivot root to jail process inside rootfs")
 	flags.BoolVarP(&opts.terminal, "terminal", "t", false, "allocate a pseudo-TTY in the container")
diff --git a/util/util.go b/util/util.go
index b3fae600..10bb8592 100644
--- a/util/util.go
+++ b/util/util.go
@@ -275,11 +275,6 @@ func Runtime() string {
 		return runtime
 	}
 
-	// Need to switch default until runc supports cgroups v2
-	if unified, _ := IsCgroup2UnifiedMode(); unified {
-		return "crun"
-	}
-
 	conf, err := config.Default()
 	if err != nil {
 		logrus.Warnf("Error loading container config when searching for local runtime: %v", err)
-- 
2.30.2

